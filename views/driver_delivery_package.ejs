<!DOCTYPE html>
<html lang="zh-TW">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>配送包管理 - 承億蔬菜外送系統</title>
    
    <!-- PWA Meta Tags -->
    <meta name="theme-color" content="#28a745">
    <meta name="apple-mobile-web-app-capable" content="yes">
    
    <!-- CSS Dependencies -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    
    <style>
        :root {
            --primary: #28a745;
            --secondary: #6c757d;
            --success: #20c997;
            --warning: #ffc107;
            --danger: #dc3545;
            --info: #17a2b8;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }

        /* ===== 配送包卡片 ===== */
        .package-container {
            padding: 20px;
            max-width: 1200px;
            margin: 0 auto;
        }

        .package-header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
        }

        .package-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 15px;
            margin-top: 15px;
        }

        .stat-item {
            text-align: center;
            padding: 10px;
            background: rgba(40, 167, 69, 0.1);
            border-radius: 10px;
        }

        .stat-value {
            font-size: 1.8rem;
            font-weight: bold;
            color: var(--primary);
        }

        .stat-label {
            font-size: 0.9rem;
            color: var(--secondary);
        }

        /* ===== 訂單分類顯示 ===== */
        .order-sections {
            display: grid;
            gap: 20px;
        }

        .order-section {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
        }

        .section-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            padding-bottom: 10px;
            border-bottom: 2px solid rgba(0, 0, 0, 0.1);
        }

        .section-title {
            font-size: 1.2rem;
            font-weight: bold;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .section-count {
            background: var(--primary);
            color: white;
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 0.9rem;
        }

        /* ===== 訂單卡片 ===== */
        .order-card {
            background: white;
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 10px;
            border-left: 4px solid;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }

        .order-card.ready {
            border-left-color: var(--success);
        }

        .order-card.packing {
            border-left-color: var(--warning);
        }

        .order-card.suggested {
            border-left-color: var(--info);
            background: rgba(23, 162, 184, 0.05);
        }

        .order-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 10px;
        }

        .order-info {
            flex-grow: 1;
        }

        .customer-name {
            font-size: 1.1rem;
            font-weight: bold;
            color: var(--dark);
        }

        .customer-phone {
            font-size: 0.9rem;
            color: var(--secondary);
        }

        .order-amount {
            font-size: 1.2rem;
            font-weight: bold;
            color: var(--primary);
        }

        .order-details {
            display: grid;
            grid-template-columns: 1fr auto;
            gap: 15px;
            align-items: center;
        }

        .address-info {
            font-size: 0.95rem;
            color: var(--secondary);
        }

        .payment-info {
            display: flex;
            align-items: center;
            gap: 5px;
            font-size: 0.9rem;
        }

        .status-info {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-top: 10px;
            padding: 8px;
            background: rgba(0, 0, 0, 0.05);
            border-radius: 8px;
        }

        .time-estimate {
            font-size: 0.9rem;
            color: var(--warning);
            font-weight: 500;
        }

        /* ===== 新訂單建議 ===== */
        .suggestion-card {
            border: 2px dashed var(--info);
            background: linear-gradient(135deg, rgba(23, 162, 184, 0.1), rgba(23, 162, 184, 0.05));
        }

        .suggestion-actions {
            display: flex;
            gap: 10px;
            margin-top: 15px;
        }

        .btn-accept {
            background: var(--success);
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 8px;
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }

        .btn-reject {
            background: var(--secondary);
            color: white;
            border: none;
            padding: 8px 15px;
            border-radius: 8px;
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }

        .btn-accept:hover, .btn-reject:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }

        /* ===== 操作按鈕 ===== */
        .action-bar {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 20px;
            margin-top: 20px;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
        }

        .action-buttons {
            display: flex;
            gap: 15px;
            justify-content: center;
        }

        .btn-primary-large {
            background: linear-gradient(135deg, var(--primary), var(--success));
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 12px;
            font-size: 1.1rem;
            font-weight: bold;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(40, 167, 69, 0.3);
        }

        .btn-secondary-large {
            background: var(--secondary);
            color: white;
            border: none;
            padding: 15px 30px;
            border-radius: 12px;
            font-size: 1.1rem;
            transition: all 0.3s ease;
        }

        /* ===== 拖拉排序 ===== */
        .sortable {
            min-height: 50px;
        }

        .order-card.dragging {
            opacity: 0.5;
            transform: rotate(5deg);
        }

        .order-card.drag-over {
            border-top: 3px solid var(--primary);
        }

        /* ===== 響應式設計 ===== */
        @media (max-width: 768px) {
            .package-container {
                padding: 15px;
            }
            
            .order-details {
                grid-template-columns: 1fr;
                gap: 10px;
            }
            
            .action-buttons {
                flex-direction: column;
            }
        }
    </style>
</head>

<body>
    <div class="package-container">
        <!-- 配送包總覽 -->
        <div class="package-header">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2><i class="fas fa-box text-primary"></i> 今日配送包</h2>
                    <p class="text-muted mb-0">三峽→樹林→鶯歌 最佳化路線</p>
                </div>
                <div class="text-end">
                    <div class="h4 text-primary mb-0" id="currentTime"></div>
                    <small class="text-muted">系統時間</small>
                </div>
            </div>
            
            <div class="package-stats">
                <div class="stat-item">
                    <div class="stat-value" id="totalOrders">0</div>
                    <div class="stat-label">總訂單</div>
                </div>
                <div class="stat-item">
                    <div class="stat-value" id="readyOrders">0</div>
                    <div class="stat-label">可出發</div>
                </div>
                <div class="stat-item">
                    <div class="stat-value" id="packingOrders">0</div>
                    <div class="stat-label">包裝中</div>
                </div>
                <div class="stat-item">
                    <div class="stat-value" id="totalAmount">$0</div>
                    <div class="stat-label">總金額</div>
                </div>
                <div class="stat-item">
                    <div class="stat-value" id="estimatedTime">0分鐘</div>
                    <div class="stat-label">預估配送</div>
                </div>
            </div>
        </div>

        <!-- 訂單分類顯示 -->
        <div class="order-sections">
            <!-- 可出發訂單 -->
            <div class="order-section">
                <div class="section-header">
                    <div class="section-title">
                        <i class="fas fa-check-circle text-success"></i>
                        可立即出發
                    </div>
                    <div class="section-count" id="readyCount">0</div>
                </div>
                <div class="sortable" id="readyOrdersList">
                    <!-- 已完成包裝的訂單將在這裡顯示 -->
                </div>
                <div class="text-center mt-3">
                    <button class="btn btn-success btn-lg" onclick="startDelivery('ready')" id="startReadyBtn" disabled>
                        <i class="fas fa-truck"></i> 開始配送已完成的訂單
                    </button>
                </div>
            </div>

            <!-- 包裝中訂單 -->
            <div class="order-section">
                <div class="section-header">
                    <div class="section-title">
                        <i class="fas fa-clock text-warning"></i>
                        包裝中
                    </div>
                    <div class="section-count" id="packingCount">0</div>
                </div>
                <div class="sortable" id="packingOrdersList">
                    <!-- 包裝中的訂單將在這裡顯示 -->
                </div>
            </div>

            <!-- 新訂單建議 -->
            <div class="order-section" id="suggestionSection" style="display: none;">
                <div class="section-header">
                    <div class="section-title">
                        <i class="fas fa-lightbulb text-info"></i>
                        智慧建議
                    </div>
                </div>
                <div id="suggestionsList">
                    <!-- 建議的新訂單將在這裡顯示 -->
                </div>
            </div>
        </div>

        <!-- 操作按鈕 -->
        <div class="action-bar">
            <div class="action-buttons">
                <button class="btn-primary-large" onclick="refreshPackage()">
                    <i class="fas fa-sync-alt"></i> 重新整理
                </button>
                <button class="btn-secondary-large" onclick="showRouteMap()">
                    <i class="fas fa-route"></i> 查看路線圖
                </button>
                <button class="btn-secondary-large" onclick="reportIssue()">
                    <i class="fas fa-exclamation-triangle"></i> 回報問題
                </button>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // ===== 全局變量 =====
        let packageData = {
            ready: [],
            packing: [],
            suggestions: []
        };

        // ===== 頁面初始化 =====
        document.addEventListener('DOMContentLoaded', function() {
            updateCurrentTime();
            setInterval(updateCurrentTime, 1000);
            loadPackageData();
            initializeDragAndDrop();
        });

        // ===== 時間更新 =====
        function updateCurrentTime() {
            const now = new Date();
            document.getElementById('currentTime').textContent = 
                now.toLocaleTimeString('zh-TW', {hour: '2-digit', minute: '2-digit'});
        }

        // ===== 載入配送包資料 =====
        async function loadPackageData() {
            try {
                // 模擬載入配送包資料
                packageData = {
                    ready: [
                        {
                            id: 1,
                            customerName: '王小明',
                            customerPhone: '0912345678',
                            address: '新北市三峽區中山路100號',
                            amount: 520,
                            paymentMethod: '現金',
                            status: 'ready'
                        },
                        {
                            id: 2,
                            customerName: '李美華',
                            customerPhone: '0923456789',
                            address: '新北市三峽區復興路50號',
                            amount: 480,
                            paymentMethod: 'LINE Pay',
                            status: 'ready'
                        }
                    ],
                    packing: [
                        {
                            id: 3,
                            customerName: '張志強',
                            customerPhone: '0934567890',
                            address: '新北市樹林區中正路200號',
                            amount: 510,
                            paymentMethod: '現金',
                            status: 'packing',
                            estimatedTime: 5
                        },
                        {
                            id: 4,
                            customerName: '林小姐',
                            customerPhone: '0945678901',
                            address: '新北市樹林區保安街88號',
                            amount: 490,
                            paymentMethod: '轉帳',
                            status: 'packing',
                            estimatedTime: 8
                        }
                    ],
                    suggestions: [
                        {
                            id: 5,
                            customerName: '陳先生',
                            customerPhone: '0956789012',
                            address: '新北市三峽區中山路120號',
                            amount: 530,
                            paymentMethod: '現金',
                            reason: '距離現有路線僅200m',
                            timeImpact: '+3分鐘'
                        }
                    ]
                };

                renderPackageData();
                updateStatistics();
            } catch (error) {
                console.error('載入配送包資料失敗:', error);
            }
        }

        // ===== 渲染配送包資料 =====
        function renderPackageData() {
            renderOrderSection('ready', packageData.ready);
            renderOrderSection('packing', packageData.packing);
            renderSuggestions(packageData.suggestions);
        }

        // ===== 渲染訂單區塊 =====
        function renderOrderSection(section, orders) {
            const container = document.getElementById(`${section}OrdersList`);
            const countElement = document.getElementById(`${section}Count`);
            
            container.innerHTML = '';
            countElement.textContent = orders.length;

            orders.forEach((order, index) => {
                const orderCard = createOrderCard(order, section, index);
                container.appendChild(orderCard);
            });

            // 更新開始配送按鈕狀態
            if (section === 'ready') {
                const startBtn = document.getElementById('startReadyBtn');
                startBtn.disabled = orders.length === 0;
            }
        }

        // ===== 創建訂單卡片 =====
        function createOrderCard(order, section, index) {
            const card = document.createElement('div');
            card.className = `order-card ${section}`;
            card.setAttribute('data-order-id', order.id);
            card.setAttribute('data-index', index);
            card.draggable = true;

            const statusInfo = section === 'packing' ? 
                `<div class="status-info">
                    <i class="fas fa-clock text-warning"></i>
                    <span class="time-estimate">還需 ${order.estimatedTime} 分鐘完成包裝</span>
                </div>` : '';

            card.innerHTML = `
                <div class="order-header">
                    <div class="order-info">
                        <div class="customer-name">${order.customerName}</div>
                        <div class="customer-phone">${order.customerPhone}</div>
                    </div>
                    <div class="order-amount">$${order.amount}</div>
                </div>
                <div class="order-details">
                    <div>
                        <div class="address-info">
                            <i class="fas fa-map-marker-alt"></i> ${order.address}
                        </div>
                        <div class="payment-info">
                            <i class="fas fa-credit-card"></i>
                            <span>${order.paymentMethod}</span>
                        </div>
                    </div>
                    <div class="text-end">
                        <button class="btn btn-sm btn-outline-danger" onclick="removeOrder(${order.id})">
                            <i class="fas fa-times"></i> 移出
                        </button>
                    </div>
                </div>
                ${statusInfo}
            `;

            return card;
        }

        // ===== 渲染建議訂單 =====
        function renderSuggestions(suggestions) {
            const container = document.getElementById('suggestionsList');
            const section = document.getElementById('suggestionSection');

            if (suggestions.length === 0) {
                section.style.display = 'none';
                return;
            }

            section.style.display = 'block';
            container.innerHTML = '';

            suggestions.forEach(suggestion => {
                const card = document.createElement('div');
                card.className = 'order-card suggested suggestion-card';
                
                card.innerHTML = `
                    <div class="order-header">
                        <div class="order-info">
                            <div class="customer-name">
                                <i class="fas fa-lightbulb text-info"></i>
                                ${suggestion.customerName}
                            </div>
                            <div class="customer-phone">${suggestion.customerPhone}</div>
                        </div>
                        <div class="order-amount">$${suggestion.amount}</div>
                    </div>
                    <div class="order-details">
                        <div>
                            <div class="address-info">
                                <i class="fas fa-map-marker-alt"></i> ${suggestion.address}
                            </div>
                            <div class="payment-info">
                                <i class="fas fa-credit-card"></i>
                                <span>${suggestion.paymentMethod}</span>
                            </div>
                            <div class="text-info mt-2">
                                <i class="fas fa-info-circle"></i>
                                ${suggestion.reason}，預計${suggestion.timeImpact}
                            </div>
                        </div>
                    </div>
                    <div class="suggestion-actions">
                        <button class="btn-accept" onclick="acceptSuggestion(${suggestion.id})">
                            <i class="fas fa-check"></i> 加入配送包
                        </button>
                        <button class="btn-reject" onclick="rejectSuggestion(${suggestion.id})">
                            <i class="fas fa-times"></i> 不適合
                        </button>
                    </div>
                `;

                container.appendChild(card);
            });
        }

        // ===== 更新統計資訊 =====
        function updateStatistics() {
            const totalOrders = packageData.ready.length + packageData.packing.length;
            const totalAmount = [...packageData.ready, ...packageData.packing]
                .reduce((sum, order) => sum + order.amount, 0);
            const estimatedTime = Math.ceil(totalOrders / 10 * 60); // 假設10單/小時

            document.getElementById('totalOrders').textContent = totalOrders;
            document.getElementById('readyOrders').textContent = packageData.ready.length;
            document.getElementById('packingOrders').textContent = packageData.packing.length;
            document.getElementById('totalAmount').textContent = `$${totalAmount.toLocaleString()}`;
            document.getElementById('estimatedTime').textContent = `${estimatedTime}分鐘`;
        }

        // ===== 拖拉排序初始化 =====
        function initializeDragAndDrop() {
            const sortableContainers = document.querySelectorAll('.sortable');
            
            sortableContainers.forEach(container => {
                container.addEventListener('dragover', handleDragOver);
                container.addEventListener('drop', handleDrop);
            });

            document.addEventListener('dragstart', handleDragStart);
            document.addEventListener('dragend', handleDragEnd);
        }

        function handleDragStart(e) {
            if (e.target.classList.contains('order-card')) {
                e.target.classList.add('dragging');
                e.dataTransfer.setData('text/plain', e.target.dataset.orderId);
            }
        }

        function handleDragEnd(e) {
            if (e.target.classList.contains('order-card')) {
                e.target.classList.remove('dragging');
            }
        }

        function handleDragOver(e) {
            e.preventDefault();
        }

        function handleDrop(e) {
            e.preventDefault();
            const orderId = e.dataTransfer.getData('text/plain');
            // 實現訂單重新排序邏輯
            console.log('重新排序訂單:', orderId);
        }

        // ===== 操作函數 =====
        function startDelivery(section) {
            if (section === 'ready' && packageData.ready.length > 0) {
                if (confirm(`確定要開始配送這 ${packageData.ready.length} 筆已完成的訂單嗎？`)) {
                    window.location.href = '/driver/delivery-start';
                }
            }
        }

        function removeOrder(orderId) {
            if (confirm('確定要將此訂單移出配送包嗎？移出後將重新進入自動優化行列。')) {
                // 實現移出訂單邏輯
                console.log('移出訂單:', orderId);
                // 這裡會調用後端API移出訂單
            }
        }

        function acceptSuggestion(suggestionId) {
            // 接受建議，將訂單加入配送包
            const suggestion = packageData.suggestions.find(s => s.id === suggestionId);
            if (suggestion) {
                packageData.packing.push({...suggestion, status: 'packing', estimatedTime: 6});
                packageData.suggestions = packageData.suggestions.filter(s => s.id !== suggestionId);
                renderPackageData();
                updateStatistics();
                
                // 顯示確認訊息
                showNotification('訂單已加入配送包', '系統已為您重新優化路線');
            }
        }

        function rejectSuggestion(suggestionId) {
            // 拒絕建議
            packageData.suggestions = packageData.suggestions.filter(s => s.id !== suggestionId);
            renderSuggestions(packageData.suggestions);
            
            showNotification('已拒絕建議訂單', '該訂單將進入下次配送行列');
        }

        function refreshPackage() {
            loadPackageData();
            showNotification('配送包已更新', '已載入最新的訂單資訊');
        }

        function showRouteMap() {
            // 顯示路線地圖
            window.open('/driver/route-map', '_blank');
        }

        function reportIssue() {
            // 回報問題
            alert('請聯絡客服：02-2345-6789');
        }

        function showNotification(title, message) {
            // 簡單的通知實現
            alert(`${title}\n${message}`);
        }

        // ===== WebSocket 即時更新 =====
        // 這裡可以加入 WebSocket 連接，即時接收包裝進度和新訂單建議
    </script>
</body>
</html>