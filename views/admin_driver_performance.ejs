<!DOCTYPE html>
<html lang="zh-Hant">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>外送員績效統計 - 誠憶鮮蔬管理後台</title>
    <link rel="stylesheet" href="/css/admin-dashboard.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        .performance-container {
            padding: 20px;
            max-width: 1600px;
            margin: 0 auto;
        }
        
        .performance-header {
            background: linear-gradient(135deg, #2c3e50, #34495e);
            color: white;
            padding: 20px;
            border-radius: 12px;
            margin-bottom: 30px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .header-controls {
            display: flex;
            gap: 15px;
            align-items: center;
        }
        
        .control-group {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }
        
        .control-group label {
            font-size: 12px;
            opacity: 0.9;
        }
        
        .control-group select, .control-group input {
            padding: 8px 12px;
            border: none;
            border-radius: 6px;
            font-size: 14px;
        }
        
        .performance-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin-bottom: 30px;
        }
        
        .performance-card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }
        
        .card-header {
            background: #34495e;
            color: white;
            padding: 15px 20px;
            display: flex;
            justify-content: between;
            align-items: center;
        }
        
        .card-content {
            padding: 20px;
        }
        
        .drivers-ranking {
            grid-column: 1 / -1;
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }
        
        .ranking-header {
            background: linear-gradient(135deg, #27ae60, #2ecc71);
            color: white;
            padding: 20px;
            display: flex;
            justify-content: between;
            align-items: center;
        }
        
        .ranking-content {
            padding: 0;
        }
        
        .driver-row {
            display: grid;
            grid-template-columns: 50px 200px 1fr 1fr 1fr 1fr 1fr 100px;
            padding: 15px 20px;
            border-bottom: 1px solid #ecf0f1;
            align-items: center;
            transition: background 0.3s ease;
        }
        
        .driver-row:hover {
            background: #f8f9fa;
        }
        
        .driver-row.header {
            background: #ecf0f1;
            font-weight: bold;
            color: #2c3e50;
        }
        
        .rank-badge {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            color: white;
            font-size: 14px;
        }
        
        .rank-1 { background: #f1c40f; }
        .rank-2 { background: #95a5a6; }
        .rank-3 { background: #e67e22; }
        .rank-other { background: #7f8c8d; }
        
        .driver-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: #3498db;
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            margin-right: 10px;
        }
        
        .driver-info {
            display: flex;
            align-items: center;
        }
        
        .driver-name {
            font-weight: bold;
            color: #2c3e50;
        }
        
        .driver-details {
            font-size: 12px;
            color: #7f8c8d;
            margin-top: 2px;
        }
        
        .performance-metric {
            text-align: center;
        }
        
        .metric-value {
            font-size: 18px;
            font-weight: bold;
            color: #2c3e50;
        }
        
        .metric-change {
            font-size: 12px;
            padding: 2px 6px;
            border-radius: 4px;
            font-weight: bold;
            margin-top: 2px;
            display: inline-block;
        }
        
        .metric-change.positive {
            background: #d4edda;
            color: #155724;
        }
        
        .metric-change.negative {
            background: #f8d7da;
            color: #721c24;
        }
        
        .metric-change.neutral {
            background: #e2e3e5;
            color: #383d41;
        }
        
        .status-badge {
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 11px;
            font-weight: bold;
            text-align: center;
        }
        
        .status-online { background: #d4edda; color: #155724; }
        .status-busy { background: #fff3cd; color: #856404; }
        .status-offline { background: #f8d7da; color: #721c24; }
        
        .chart-container {
            height: 300px;
            position: relative;
        }
        
        .performance-summary {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .summary-card {
            background: white;
            padding: 20px;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            text-align: center;
            border-left: 4px solid var(--accent-color, #3498db);
        }
        
        .summary-card.deliveries { --accent-color: #27ae60; }
        .summary-card.efficiency { --accent-color: #3498db; }
        .summary-card.satisfaction { --accent-color: #f39c12; }
        .summary-card.earnings { --accent-color: #e74c3c; }
        
        .summary-value {
            font-size: 2.5em;
            font-weight: bold;
            color: var(--accent-color);
            margin: 10px 0;
        }
        
        .summary-change {
            font-size: 0.9em;
            padding: 4px 8px;
            border-radius: 4px;
            font-weight: bold;
        }
        
        .driver-details-panel {
            background: white;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-top: 30px;
            display: none;
        }
        
        .details-header {
            background: #34495e;
            color: white;
            padding: 15px 20px;
            display: flex;
            justify-content: between;
            align-items: center;
        }
        
        .details-content {
            padding: 20px;
        }
        
        .details-grid {
            display: grid;
            grid-template-columns: 1fr 1fr 1fr;
            gap: 20px;
        }
        
        .detail-section {
            background: #f8f9fa;
            padding: 15px;
            border-radius: 8px;
        }
        
        .section-title {
            font-weight: bold;
            color: #2c3e50;
            margin-bottom: 10px;
        }
        
        .detail-item {
            display: flex;
            justify-content: between;
            margin-bottom: 5px;
            font-size: 14px;
        }
        
        .detail-label {
            color: #7f8c8d;
        }
        
        .detail-value {
            font-weight: bold;
            color: #2c3e50;
        }
        
        .rating-stars {
            color: #f1c40f;
            font-size: 16px;
        }
        
        .btn {
            padding: 8px 16px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            transition: all 0.3s ease;
        }
        
        .btn-primary { background: #3498db; color: white; }
        .btn-success { background: #27ae60; color: white; }
        .btn-warning { background: #f39c12; color: white; }
        .btn-danger { background: #e74c3c; color: white; }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
        
        .breadcrumb {
            margin-bottom: 20px;
            color: #7f8c8d;
        }
        
        .breadcrumb a {
            color: #3498db;
            text-decoration: none;
        }
        
        .filter-panel {
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 8px;
            padding: 15px;
            margin-bottom: 20px;
        }
        
        .filter-row {
            display: flex;
            gap: 15px;
            align-items: center;
            flex-wrap: wrap;
        }
        
        @media (max-width: 1200px) {
            .performance-grid {
                grid-template-columns: 1fr;
            }
            
            .details-grid {
                grid-template-columns: 1fr;
            }
        }
        
        @media (max-width: 768px) {
            .header-controls {
                flex-direction: column;
                gap: 10px;
            }
            
            .driver-row {
                grid-template-columns: 1fr;
                text-align: center;
                gap: 10px;
            }
            
            .filter-row {
                flex-direction: column;
                align-items: stretch;
            }
        }
        
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
            display: none;
        }
        
        .loading-content {
            background: white;
            padding: 30px;
            border-radius: 12px;
            text-align: center;
        }
        
        .loading-spinner {
            width: 50px;
            height: 50px;
            border: 4px solid #e9ecef;
            border-left: 4px solid #3498db;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto 15px;
        }
        
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <div class="performance-container">
        <!-- 麵包屑導航 -->
        <div class="breadcrumb">
            <a href="/admin/dashboard">管理後台</a> > <span>外送員績效統計</span>
        </div>
        
        <!-- 績效統計標題 -->
        <div class="performance-header">
            <div>
                <h1>🚚 外送員績效統計</h1>
                <p>追蹤外送員表現，提升服務品質</p>
            </div>
            <div class="header-controls">
                <div class="control-group">
                    <label>時間範圍</label>
                    <select id="timeRange">
                        <option value="7">近7天</option>
                        <option value="30" selected>近30天</option>
                        <option value="90">近3個月</option>
                    </select>
                </div>
                <div class="control-group">
                    <label>外送員</label>
                    <select id="driverFilter">
                        <option value="all">所有外送員</option>
                        <option value="1">李大明</option>
                        <option value="2">王小華</option>
                        <option value="3">張志偉</option>
                    </select>
                </div>
                <button class="btn btn-primary" onclick="refreshData()">🔄 更新</button>
            </div>
        </div>
        
        <!-- 績效摘要 -->
        <div class="performance-summary">
            <div class="summary-card deliveries">
                <h3>📦 總配送數</h3>
                <div class="summary-value" id="totalDeliveries">230</div>
                <div class="summary-change positive" id="deliveriesChange">+15.2% 較上期</div>
            </div>
            <div class="summary-card efficiency">
                <h3>⚡ 平均效率</h3>
                <div class="summary-value" id="avgEfficiency">94.2%</div>
                <div class="summary-change positive" id="efficiencyChange">+3.1% 較上期</div>
            </div>
            <div class="summary-card satisfaction">
                <h3>😊 客戶滿意度</h3>
                <div class="summary-value" id="avgSatisfaction">4.8</div>
                <div class="summary-change positive" id="satisfactionChange">+0.2 較上期</div>
            </div>
            <div class="summary-card earnings">
                <h3>💰 平均收入</h3>
                <div class="summary-value" id="avgEarnings">$2,850</div>
                <div class="summary-change neutral" id="earningsChange">+2.3% 較上期</div>
            </div>
        </div>
        
        <!-- 績效圖表 -->
        <div class="performance-grid">
            <div class="performance-card">
                <div class="card-header">
                    <h3>📊 配送效率趨勢</h3>
                    <button class="btn btn-success" onclick="exportChart('efficiency')">📊 匯出</button>
                </div>
                <div class="card-content">
                    <div class="chart-container">
                        <canvas id="efficiencyChart"></canvas>
                    </div>
                </div>
            </div>
            
            <div class="performance-card">
                <div class="card-header">
                    <h3>⏰ 配送時間分布</h3>
                    <button class="btn btn-success" onclick="exportChart('timeDistribution')">📊 匯出</button>
                </div>
                <div class="card-content">
                    <div class="chart-container">
                        <canvas id="timeDistributionChart"></canvas>
                    </div>
                </div>
            </div>
            
            <div class="performance-card">
                <div class="card-header">
                    <h3>🎯 績效評分</h3>
                    <button class="btn btn-success" onclick="exportChart('performance')">📊 匯出</button>
                </div>
                <div class="card-content">
                    <div class="chart-container">
                        <canvas id="performanceRadarChart"></canvas>
                    </div>
                </div>
            </div>
            
            <div class="performance-card">
                <div class="card-header">
                    <h3>💰 收入分析</h3>
                    <button class="btn btn-success" onclick="exportChart('earnings')">📊 匯出</button>
                </div>
                <div class="card-content">
                    <div class="chart-container">
                        <canvas id="earningsChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- 外送員排名 -->
        <div class="drivers-ranking">
            <div class="ranking-header">
                <div>
                    <h3>🏆 外送員排名榜</h3>
                    <p>根據綜合績效評分排序</p>
                </div>
                <div>
                    <button class="btn btn-success" onclick="exportTable()">📄 匯出Excel</button>
                </div>
            </div>
            <div class="ranking-content">
                <div class="driver-row header">
                    <div>排名</div>
                    <div>外送員</div>
                    <div>配送數</div>
                    <div>準時率</div>
                    <div>平均時間</div>
                    <div>客戶評價</div>
                    <div>本月收入</div>
                    <div>狀態</div>
                </div>
                <div id="driverRankingList">
                    <!-- 動態載入外送員排名 -->
                </div>
            </div>
        </div>
        
        <!-- 外送員詳情面板 -->
        <div class="driver-details-panel" id="driverDetailsPanel">
            <div class="details-header">
                <h3 id="selectedDriverName">外送員詳情</h3>
                <button class="btn btn-danger" onclick="closeDriverDetails()">✕ 關閉</button>
            </div>
            <div class="details-content">
                <div class="details-grid">
                    <div class="detail-section">
                        <div class="section-title">📊 績效統計</div>
                        <div class="detail-item">
                            <span class="detail-label">總配送數:</span>
                            <span class="detail-value" id="detailTotalDeliveries">--</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-label">成功率:</span>
                            <span class="detail-value" id="detailSuccessRate">--</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-label">平均配送時間:</span>
                            <span class="detail-value" id="detailAvgTime">--</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-label">準時配送率:</span>
                            <span class="detail-value" id="detailOnTimeRate">--</span>
                        </div>
                    </div>
                    
                    <div class="detail-section">
                        <div class="section-title">😊 客戶反饋</div>
                        <div class="detail-item">
                            <span class="detail-label">平均評分:</span>
                            <span class="detail-value" id="detailAvgRating">--</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-label">五星評價:</span>
                            <span class="detail-value" id="detailFiveStars">--</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-label">客戶投訴:</span>
                            <span class="detail-value" id="detailComplaints">--</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-label">客戶稱讚:</span>
                            <span class="detail-value" id="detailPraises">--</span>
                        </div>
                    </div>
                    
                    <div class="detail-section">
                        <div class="section-title">💰 收入資訊</div>
                        <div class="detail-item">
                            <span class="detail-label">本月收入:</span>
                            <span class="detail-value" id="detailMonthlyEarnings">--</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-label">平均每單:</span>
                            <span class="detail-value" id="detailAvgEarnings">--</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-label">獎金:</span>
                            <span class="detail-value" id="detailBonus">--</span>
                        </div>
                        <div class="detail-item">
                            <span class="detail-label">排名獎勵:</span>
                            <span class="detail-value" id="detailRankBonus">--</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- 載入遮罩 -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-content">
            <div class="loading-spinner"></div>
            <p>載入績效資料中...</p>
        </div>
    </div>

    <script>
        // 全域變數
        let performanceCharts = {};
        let driverData = [];
        let currentSelectedDriver = null;
        
        // 示範資料
        const sampleDriverData = [
            {
                id: 1,
                name: '李大明',
                phone: '0912345678',
                vehicle: '機車',
                status: 'online',
                deliveries: 89,
                onTimeRate: 96.6,
                avgTime: 38,
                rating: 4.9,
                monthlyEarnings: 3200,
                efficiency: 96.6,
                successRate: 98.9,
                complaints: 0,
                praises: 15,
                bonus: 500
            },
            {
                id: 2,
                name: '王小華',
                phone: '0923456789',
                vehicle: '機車',
                status: 'busy',
                deliveries: 76,
                onTimeRate: 94.7,
                avgTime: 41,
                rating: 4.7,
                monthlyEarnings: 2850,
                efficiency: 94.7,
                successRate: 97.4,
                complaints: 1,
                praises: 12,
                bonus: 300
            },
            {
                id: 3,
                name: '張志偉',
                phone: '0934567890',
                vehicle: '腳踏車',
                status: 'offline',
                deliveries: 65,
                onTimeRate: 92.3,
                avgTime: 45,
                rating: 4.6,
                monthlyEarnings: 2400,
                efficiency: 92.3,
                successRate: 95.4,
                complaints: 2,
                praises: 8,
                bonus: 200
            }
        ];
        
        // 頁面載入完成後初始化
        document.addEventListener('DOMContentLoaded', function() {
            initializeCharts();
            loadDriverRanking();
            updatePerformanceSummary();
        });
        
        // 初始化所有圖表
        function initializeCharts() {
            // 配送效率趨勢圖
            const efficiencyCtx = document.getElementById('efficiencyChart').getContext('2d');
            performanceCharts.efficiency = new Chart(efficiencyCtx, {
                type: 'line',
                data: {
                    labels: ['第1週', '第2週', '第3週', '第4週'],
                    datasets: [
                        {
                            label: '李大明',
                            data: [94, 95, 97, 97],
                            borderColor: '#27ae60',
                            backgroundColor: 'rgba(39, 174, 96, 0.1)',
                            tension: 0.4
                        },
                        {
                            label: '王小華',
                            data: [92, 94, 95, 95],
                            borderColor: '#3498db',
                            backgroundColor: 'rgba(52, 152, 219, 0.1)',
                            tension: 0.4
                        },
                        {
                            label: '張志偉',
                            data: [90, 91, 93, 92],
                            borderColor: '#f39c12',
                            backgroundColor: 'rgba(243, 156, 18, 0.1)',
                            tension: 0.4
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            max: 100
                        }
                    }
                }
            });
            
            // 配送時間分布圖
            const timeCtx = document.getElementById('timeDistributionChart').getContext('2d');
            performanceCharts.timeDistribution = new Chart(timeCtx, {
                type: 'doughnut',
                data: {
                    labels: ['<30分', '30-45分', '45-60分', '>60分'],
                    datasets: [{
                        data: [25, 45, 25, 5],
                        backgroundColor: [
                            '#27ae60',
                            '#3498db',
                            '#f39c12',
                            '#e74c3c'
                        ]
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    }
                }
            });
            
            // 績效評分雷達圖
            const performanceCtx = document.getElementById('performanceRadarChart').getContext('2d');
            performanceCharts.performance = new Chart(performanceCtx, {
                type: 'radar',
                data: {
                    labels: ['準時性', '效率', '客戶評價', '完成率', '配合度'],
                    datasets: [
                        {
                            label: '李大明',
                            data: [97, 96, 98, 99, 95],
                            borderColor: '#27ae60',
                            backgroundColor: 'rgba(39, 174, 96, 0.2)',
                            pointBackgroundColor: '#27ae60'
                        },
                        {
                            label: '王小華',
                            data: [95, 94, 94, 97, 93],
                            borderColor: '#3498db',
                            backgroundColor: 'rgba(52, 152, 219, 0.2)',
                            pointBackgroundColor: '#3498db'
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        r: {
                            beginAtZero: true,
                            max: 100
                        }
                    }
                }
            });
            
            // 收入分析圖
            const earningsCtx = document.getElementById('earningsChart').getContext('2d');
            performanceCharts.earnings = new Chart(earningsCtx, {
                type: 'bar',
                data: {
                    labels: ['李大明', '王小華', '張志偉'],
                    datasets: [
                        {
                            label: '基本收入',
                            data: [2700, 2550, 2200],
                            backgroundColor: '#3498db'
                        },
                        {
                            label: '績效獎金',
                            data: [500, 300, 200],
                            backgroundColor: '#27ae60'
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom'
                        }
                    },
                    scales: {
                        x: {
                            stacked: true
                        },
                        y: {
                            stacked: true,
                            beginAtZero: true
                        }
                    }
                }
            });
        }
        
        // 載入外送員排名
        function loadDriverRanking() {
            const rankingList = document.getElementById('driverRankingList');
            
            // 按綜合評分排序
            const sortedDrivers = sampleDriverData.sort((a, b) => {
                const scoreA = (a.onTimeRate + a.rating * 20 + a.efficiency) / 3;
                const scoreB = (b.onTimeRate + b.rating * 20 + b.efficiency) / 3;
                return scoreB - scoreA;
            });
            
            driverData = sortedDrivers;
            
            rankingList.innerHTML = sortedDrivers.map((driver, index) => {
                const rank = index + 1;
                const rankClass = rank === 1 ? 'rank-1' : rank === 2 ? 'rank-2' : rank === 3 ? 'rank-3' : 'rank-other';
                const statusClass = `status-${driver.status}`;
                const statusText = driver.status === 'online' ? '在線' : driver.status === 'busy' ? '忙碌' : '離線';
                
                return `
                    <div class="driver-row" onclick="showDriverDetails(${driver.id})">
                        <div class="rank-badge ${rankClass}">${rank}</div>
                        <div class="driver-info">
                            <div class="driver-avatar">${driver.name.charAt(0)}</div>
                            <div>
                                <div class="driver-name">${driver.name}</div>
                                <div class="driver-details">${driver.phone} • ${driver.vehicle}</div>
                            </div>
                        </div>
                        <div class="performance-metric">
                            <div class="metric-value">${driver.deliveries}</div>
                            <div class="metric-change positive">+${Math.floor(Math.random() * 20)}%</div>
                        </div>
                        <div class="performance-metric">
                            <div class="metric-value">${driver.onTimeRate}%</div>
                            <div class="metric-change ${driver.onTimeRate > 95 ? 'positive' : 'neutral'}">
                                ${driver.onTimeRate > 95 ? '+' : ''}${(Math.random() * 4 - 2).toFixed(1)}%
                            </div>
                        </div>
                        <div class="performance-metric">
                            <div class="metric-value">${driver.avgTime}分</div>
                            <div class="metric-change ${driver.avgTime < 40 ? 'positive' : 'negative'}">
                                ${driver.avgTime < 40 ? '-' : '+'}${Math.floor(Math.random() * 5)}分
                            </div>
                        </div>
                        <div class="performance-metric">
                            <div class="metric-value rating-stars">
                                ${'★'.repeat(Math.floor(driver.rating))}${'☆'.repeat(5 - Math.floor(driver.rating))}
                            </div>
                            <div class="metric-value">${driver.rating}</div>
                        </div>
                        <div class="performance-metric">
                            <div class="metric-value">$${driver.monthlyEarnings.toLocaleString()}</div>
                            <div class="metric-change positive">+${Math.floor(Math.random() * 15)}%</div>
                        </div>
                        <div>
                            <div class="status-badge ${statusClass}">${statusText}</div>
                        </div>
                    </div>
                `;
            }).join('');
        }
        
        // 更新績效摘要
        function updatePerformanceSummary() {
            const totalDeliveries = driverData.reduce((sum, driver) => sum + driver.deliveries, 0);
            const avgEfficiency = driverData.reduce((sum, driver) => sum + driver.efficiency, 0) / driverData.length;
            const avgSatisfaction = driverData.reduce((sum, driver) => sum + driver.rating, 0) / driverData.length;
            const avgEarnings = driverData.reduce((sum, driver) => sum + driver.monthlyEarnings, 0) / driverData.length;
            
            document.getElementById('totalDeliveries').textContent = totalDeliveries;
            document.getElementById('avgEfficiency').textContent = avgEfficiency.toFixed(1) + '%';
            document.getElementById('avgSatisfaction').textContent = avgSatisfaction.toFixed(1);
            document.getElementById('avgEarnings').textContent = '$' + avgEarnings.toLocaleString();
        }
        
        // 顯示外送員詳情
        function showDriverDetails(driverId) {
            const driver = driverData.find(d => d.id === driverId);
            if (!driver) return;
            
            currentSelectedDriver = driver;
            
            // 更新詳情面板
            document.getElementById('selectedDriverName').textContent = `${driver.name} 的績效詳情`;
            document.getElementById('detailTotalDeliveries').textContent = driver.deliveries;
            document.getElementById('detailSuccessRate').textContent = driver.successRate + '%';
            document.getElementById('detailAvgTime').textContent = driver.avgTime + '分鐘';
            document.getElementById('detailOnTimeRate').textContent = driver.onTimeRate + '%';
            document.getElementById('detailAvgRating').textContent = driver.rating + '/5.0';
            document.getElementById('detailFiveStars').textContent = Math.floor(driver.deliveries * (driver.rating - 4)) + '個';
            document.getElementById('detailComplaints').textContent = driver.complaints + '次';
            document.getElementById('detailPraises').textContent = driver.praises + '次';
            document.getElementById('detailMonthlyEarnings').textContent = '$' + driver.monthlyEarnings.toLocaleString();
            document.getElementById('detailAvgEarnings').textContent = '$' + Math.round(driver.monthlyEarnings / driver.deliveries);
            document.getElementById('detailBonus').textContent = '$' + driver.bonus.toLocaleString();
            document.getElementById('detailRankBonus').textContent = '$' + (driver.bonus / 2);
            
            // 顯示詳情面板
            document.getElementById('driverDetailsPanel').style.display = 'block';
        }
        
        // 關閉外送員詳情
        function closeDriverDetails() {
            document.getElementById('driverDetailsPanel').style.display = 'none';
            currentSelectedDriver = null;
        }
        
        // 刷新資料
        function refreshData() {
            showLoading(true);
            
            // 模擬API調用
            setTimeout(() => {
                // 重新載入所有資料
                loadDriverRanking();
                updatePerformanceSummary();
                
                // 更新圖表
                Object.values(performanceCharts).forEach(chart => {
                    if (chart && chart.update) {
                        chart.update();
                    }
                });
                
                showLoading(false);
                showNotification('📊 績效資料已更新', 'success');
            }, 1500);
        }
        
        // 顯示/隱藏載入遮罩
        function showLoading(show) {
            document.getElementById('loadingOverlay').style.display = show ? 'flex' : 'none';
        }
        
        // 匯出圖表
        function exportChart(chartType) {
            const chart = performanceCharts[chartType];
            if (chart) {
                const url = chart.toBase64Image();
                const link = document.createElement('a');
                link.download = `${chartType}_performance_chart.png`;
                link.href = url;
                link.click();
                showNotification('📊 圖表已匯出', 'success');
            }
        }
        
        // 匯出表格
        function exportTable() {
            // 模擬Excel匯出
            showNotification('📄 Excel檔案準備中...', 'info');
            setTimeout(() => {
                showNotification('✅ Excel檔案已下載', 'success');
            }, 2000);
        }
        
        // 顯示通知
        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            
            const bgColor = {
                success: '#27ae60',
                warning: '#f39c12',
                error: '#e74c3c',
                info: '#3498db'
            }[type] || '#3498db';
            
            notification.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                background: ${bgColor};
                color: white;
                padding: 15px 20px;
                border-radius: 6px;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                z-index: 1000;
                transform: translateX(400px);
                transition: transform 0.3s ease;
            `;
            notification.textContent = message;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.style.transform = 'translateX(0)';
            }, 100);
            
            setTimeout(() => {
                notification.style.transform = 'translateX(400px)';
                setTimeout(() => {
                    if (document.body.contains(notification)) {
                        document.body.removeChild(notification);
                    }
                }, 300);
            }, 4000);
        }
        
        // 時間範圍改變事件
        document.getElementById('timeRange').addEventListener('change', function() {
            refreshData();
        });
        
        // 外送員篩選改變事件
        document.getElementById('driverFilter').addEventListener('change', function() {
            const selectedDriver = this.value;
            
            if (selectedDriver === 'all') {
                loadDriverRanking();
            } else {
                // 篩選特定外送員
                const filteredData = sampleDriverData.filter(d => d.id == selectedDriver);
                driverData = filteredData;
                loadDriverRanking();
            }
            
            updatePerformanceSummary();
        });
    </script>
</body>
</html>