<!DOCTYPE html>
<html lang="zh-TW">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>銀行帳號設定 - 誠意鮮蔬後台</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: 'Microsoft YaHei', Arial, sans-serif;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      min-height: 100vh;
      color: #333;
    }
    
    .header {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(10px);
      padding: 20px 0;
      box-shadow: 0 2px 20px rgba(0,0,0,0.1);
      margin-bottom: 30px;
    }
    
    .container {
      max-width: 800px;
      margin: 0 auto;
      padding: 0 20px;
    }
    
    h1 {
      text-align: center;
      color: #4a5568;
      font-size: 2.5em;
      margin-bottom: 10px;
    }
    
    .subtitle {
      text-align: center;
      color: #718096;
      font-size: 1.1em;
      margin-bottom: 20px;
    }
    
    .section {
      background: rgba(255, 255, 255, 0.9);
      backdrop-filter: blur(10px);
      border-radius: 15px;
      padding: 30px;
      margin-bottom: 30px;
      box-shadow: 0 8px 32px rgba(31, 38, 135, 0.37);
    }
    
    .section h2 {
      color: #2d3748;
      margin-bottom: 20px;
      font-size: 1.8em;
      border-bottom: 3px solid #4299e1;
      padding-bottom: 10px;
    }
    
    .form-group {
      margin-bottom: 20px;
    }
    
    .form-group label {
      display: block;
      margin-bottom: 8px;
      font-weight: bold;
      color: #4a5568;
    }
    
    .form-control {
      width: 100%;
      padding: 12px;
      border: 2px solid #e2e8f0;
      border-radius: 8px;
      font-size: 1em;
      transition: border-color 0.3s ease;
    }
    
    .form-control:focus {
      outline: none;
      border-color: #4299e1;
    }
    
    .btn {
      padding: 12px 24px;
      border: none;
      border-radius: 8px;
      font-size: 1em;
      font-weight: bold;
      cursor: pointer;
      text-decoration: none;
      display: inline-block;
      transition: all 0.3s ease;
      margin: 5px;
    }
    
    .btn-primary { background: #4299e1; color: white; }
    .btn-success { background: #38a169; color: white; }
    .btn-warning { background: #d69e2e; color: white; }
    
    .btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 15px rgba(0,0,0,0.2);
    }
    
    .bank-account-item {
      background: #f7fafc;
      border: 1px solid #e2e8f0;
      border-radius: 8px;
      padding: 20px;
      margin-bottom: 15px;
      position: relative;
    }
    
    .bank-account-item.active {
      border-color: #38a169;
      background: #f0fff4;
    }
    
    .account-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 10px;
    }
    
    .account-name {
      font-weight: bold;
      font-size: 1.2em;
      color: #2d3748;
    }
    
    .account-status {
      padding: 4px 12px;
      border-radius: 12px;
      font-size: 0.8em;
      font-weight: bold;
    }
    
    .status-active {
      background: #c6f6d5;
      color: #22543d;
    }
    
    .status-inactive {
      background: #fed7d7;
      color: #742a2a;
    }
    
    .account-details {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      gap: 10px;
      margin-bottom: 15px;
    }
    
    .account-info {
      font-size: 0.9em;
      color: #4a5568;
    }
    
    .account-info strong {
      color: #2d3748;
    }
    
    .account-actions {
      display: flex;
      gap: 10px;
    }
    
    .highlight-box {
      background: #fef5e7;
      border: 2px solid #d69e2e;
      border-radius: 10px;
      padding: 20px;
      margin: 20px 0;
    }
    
    .highlight-box h3 {
      color: #d69e2e;
      margin-bottom: 10px;
    }
    
    /* 📱 手機端響應式優化 */
    @media (max-width: 768px) {
      .container {
        padding: 0 15px;
      }
      
      h1 {
        font-size: 2em;
      }
      
      .section {
        padding: 20px 15px;
        margin-bottom: 20px;
      }
      
      .section h2 {
        font-size: 1.5em;
      }
      
      .bank-account-item {
        padding: 15px;
      }
      
      .account-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 10px;
      }
      
      .account-details {
        grid-template-columns: 1fr;
        gap: 8px;
      }
      
      .account-actions {
        flex-wrap: wrap;
        gap: 5px;
      }
      
      .btn {
        padding: 8px 16px;
        font-size: 0.85em;
        margin: 2px;
      }
    }
    
    @media (max-width: 480px) {
      .container {
        padding: 0 10px;
      }
      
      h1 {
        font-size: 1.8em;
      }
      
      .section {
        padding: 15px 10px;
      }
      
      .section h2 {
        font-size: 1.3em;
      }
      
      .btn {
        width: 100%;
        margin: 2px 0;
      }
      
      .account-actions .btn {
        width: auto;
        flex: 1;
        min-width: 80px;
      }
    }
  </style>
</head>
<body>
  <div class="header">
    <div class="container">
      <h1>🏦 銀行帳號設定</h1>
      <p class="subtitle">管理銀行轉帳收款帳號</p>
    </div>
  </div>

  <div class="container">
    <!-- 新增銀行帳號 -->
    <div class="section">
      <h2>➕ 新增銀行帳號</h2>
      
      <form id="bankForm">
        <div class="form-group">
          <label>銀行名稱：</label>
          <input type="text" id="bankName" class="form-control" 
                 placeholder="例如：中國信託商業銀行" required>
        </div>
        
        <div class="form-group">
          <label>分行名稱：</label>
          <input type="text" id="branchName" class="form-control" 
                 placeholder="例如：三峽分行">
        </div>
        
        <div class="form-group">
          <label>帳戶名稱：</label>
          <input type="text" id="accountName" class="form-control" 
                 placeholder="例如：誠意鮮蔬有限公司" required>
        </div>
        
        <div class="form-group">
          <label>銀行帳號：</label>
          <input type="text" id="accountNumber" class="form-control" 
                 placeholder="例如：123-456-789012" required>
        </div>
        
        <div class="form-group">
          <label>備註說明：</label>
          <textarea id="notes" class="form-control" rows="3" 
                    placeholder="例如：主要收款帳戶，LINE Pay 收款用"></textarea>
        </div>
        
        <button type="submit" class="btn btn-success">💾 儲存銀行帳號</button>
        <button type="button" class="btn btn-warning" onclick="clearForm()">🗑️ 清除表單</button>
      </form>
    </div>

    <!-- 現有銀行帳號列表 -->
    <div class="section">
      <h2>📋 現有銀行帳號</h2>
      
      <div class="highlight-box">
        <h3>💡 使用說明</h3>
        <p>• 啟用的帳號會在包裝完成通知中自動顯示給客戶</p>
        <p>• 建議至少設定一個主要收款帳號</p>
        <p>• 可設定多個帳號供不同用途使用</p>
      </div>
      
      <div id="bankAccountsList">
        <!-- 動態載入銀行帳號 -->
      </div>
    </div>

    <!-- 返回按鈕 -->
    <div class="section">
      <a href="/admin" class="btn btn-primary">← 返回後台主頁</a>
      <a href="/admin/order-management" class="btn btn-primary">📋 訂單管理</a>
    </div>
  </div>

  <script>
    // 載入銀行帳號列表
    async function loadBankAccounts() {
      try {
        const response = await fetch('/api/admin/bank-accounts');
        const data = await response.json();
        
        const container = document.getElementById('bankAccountsList');
        
        if (data.success && data.accounts.length > 0) {
          container.innerHTML = '';
          
          data.accounts.forEach(account => {
            const item = document.createElement('div');
            item.className = `bank-account-item ${account.is_active ? 'active' : ''}`;
            item.innerHTML = `
              <div class="account-header">
                <div class="account-name">${account.bank_name}</div>
                <div class="account-status ${account.is_active ? 'status-active' : 'status-inactive'}">
                  ${account.is_active ? '啟用中' : '已停用'}
                </div>
              </div>
              <div class="account-details">
                <div class="account-info">
                  <strong>分行：</strong>${account.branch_name || '未設定'}
                </div>
                <div class="account-info">
                  <strong>戶名：</strong>${account.account_name}
                </div>
                <div class="account-info">
                  <strong>帳號：</strong>${account.account_number}
                </div>
                <div class="account-info">
                  <strong>建立：</strong>${new Date(account.created_at).toLocaleString()}
                </div>
              </div>
              ${account.notes ? `<div class="account-info"><strong>備註：</strong>${account.notes}</div>` : ''}
              <div class="account-actions">
                <button class="btn ${account.is_active ? 'btn-warning' : 'btn-success'}" 
                        onclick="toggleAccountStatus(${account.id}, ${account.is_active})">
                  ${account.is_active ? '⏸️ 停用' : '▶️ 啟用'}
                </button>
                <button class="btn btn-warning" onclick="editAccount(${account.id})">✏️ 編輯</button>
                <button class="btn" style="background: #e53e3e; color: white;" onclick="deleteAccount(${account.id})">🗑️ 刪除</button>
              </div>
            `;
            
            container.appendChild(item);
          });
        } else {
          container.innerHTML = `
            <div style="text-align: center; padding: 40px; color: #718096;">
              <p>目前沒有設定任何銀行帳號</p>
              <p>請新增一個收款帳號以接收客戶轉帳付款</p>
            </div>
          `;
        }
      } catch (error) {
        console.error('載入銀行帳號失敗:', error);
        document.getElementById('bankAccountsList').innerHTML = `
          <div style="text-align: center; padding: 40px; color: #e53e3e;">
            載入銀行帳號失敗，請重新整理頁面
          </div>
        `;
      }
    }

    // 新增銀行帳號
    document.getElementById('bankForm').addEventListener('submit', async function(e) {
      e.preventDefault();
      
      const formData = {
        bankName: document.getElementById('bankName').value,
        branchName: document.getElementById('branchName').value,
        accountName: document.getElementById('accountName').value,
        accountNumber: document.getElementById('accountNumber').value,
        notes: document.getElementById('notes').value
      };
      
      try {
        const response = await fetch('/api/admin/bank-accounts', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(formData)
        });
        
        const result = await response.json();
        
        if (result.success) {
          alert('✅ 銀行帳號新增成功！');
          clearForm();
          loadBankAccounts();
        } else {
          alert('❌ 新增失敗：' + result.message);
        }
      } catch (error) {
        alert('❌ 新增銀行帳號時發生錯誤');
        console.error(error);
      }
    });

    // 切換帳號啟用狀態
    async function toggleAccountStatus(id, currentStatus) {
      try {
        const response = await fetch(`/api/admin/bank-accounts/${id}/toggle`, {
          method: 'PUT'
        });
        
        const result = await response.json();
        
        if (result.success) {
          alert(`✅ 帳號狀態已${currentStatus ? '停用' : '啟用'}`);
          loadBankAccounts();
        } else {
          alert('❌ 狀態切換失敗：' + result.message);
        }
      } catch (error) {
        alert('❌ 切換狀態時發生錯誤');
        console.error(error);
      }
    }

    // 刪除銀行帳號
    async function deleteAccount(id) {
      if (!confirm('確定要刪除此銀行帳號嗎？此操作無法復原！')) {
        return;
      }
      
      try {
        const response = await fetch(`/api/admin/bank-accounts/${id}`, {
          method: 'DELETE'
        });
        
        const result = await response.json();
        
        if (result.success) {
          alert('✅ 銀行帳號已刪除');
          loadBankAccounts();
        } else {
          alert('❌ 刪除失敗：' + result.message);
        }
      } catch (error) {
        alert('❌ 刪除銀行帳號時發生錯誤');
        console.error(error);
      }
    }

    // 清除表單
    function clearForm() {
      document.getElementById('bankForm').reset();
    }

    // 編輯銀行帳號（簡化版本）
    function editAccount(id) {
      alert('編輯功能開發中，請先刪除後重新新增');
    }

    // 頁面載入時初始化
    document.addEventListener('DOMContentLoaded', function() {
      loadBankAccounts();
    });
  </script>
</body>
</html>